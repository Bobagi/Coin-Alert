version: "3.8"

services:
  db:
    image: postgres:13
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${EXTERNAL_DB_PORT}:${DB_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/app
    command: ["python", "app.py"]
    ports:
      - "${API_PORT}:5000"

  send_email:
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/app
    command: ["python", "scripts/send_email.py"]

  auto_sell:
    build: .
    restart: always
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
    env_file:
      - .env
    environment:
      API_URL: "http://api:5000"
    volumes:
      - .:/app
    command: ["python", "scripts/auto_sell.py"]

  daily_buy:
    build: .
    restart: always
    depends_on:
      api:
        condition: service_started
    env_file:
      - .env
    environment:
      API_URL: "http://api:5000"
    volumes:
      - .:/app
    command: ["python", "scripts/daily_buy.py"]

volumes:
  db_data:
